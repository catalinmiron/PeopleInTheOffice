import React, { Component } from 'react';
import {
  Alert,
  Platform,
  StyleSheet,
  Text,
  View,
  TouchableOpacity
} from 'react-native'

import PushNotification from 'react-native-push-notification'
import inOffice from '../lib/in-office';
import {Actions} from 'react-native-router-flux';
import Device from '../components/DeviceInfo';
import Client from '../lib/parse-main'


export default class Home extends Component {

  constructor() {
    super();

    this.state = {
      onlinePpl: 0
    }
    this.subscription = null;
  }

  componentWillMount() {
    this.subscription = Client.createSubscription();
  }

  componentDidMount() {
    Client.getOfficeDetails((res) => {
      this.setState({
        onlinePpl: res.get('online')
      })
    });

    Client.onOnlineChange(this.subscription, (res) => {
      this.setState({
        onlinePpl: res.get('online')
      })
    })
  }

  componentWIllUnmount() {
    Client.unsubscribe(this.subscription);
    this.subscription = null;
  }

  notifyUser(location) {
    PushNotification.localNotification({
      /* Android Only Properties */
      id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: "My Notification Ticker", // (optional)
      autoCancel: true, // (optional) default: true
      largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
      smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
      subText: "This is a subText", // (optional) default: none
      color: "red", // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: 'some_tag', // (optional) add tag to message
      group: "group", // (optional) add group to message
      ongoing: false, // (optional) set whether this is an "ongoing" notification

      /* iOS only properties */
      // category: // (optional) default: null
      // userInfo: // (optional) default: null (object containing additional notification data)

      /* iOS and Android properties */
      title: "Location has changed!", // (optional, for iOS this is only used in apple watch, the title will be the app name on other iOS devices)
      message: inOffice(location.longitude, location.latitude) ? "You are inside the building!" : "You're not in the building!", // (required)
      playSound: true, // (optional) default: true
      soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
      number: this.state.counter + 1, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
    });
  }

  render() {
    return <View style={styles.container}>
      <View style={styles.numberWrapper}>
        <Text style={styles.peopleOnline}>
          {this.state.onlinePpl}
        </Text>
        <Text>
          people in the office
        </Text>
        <Device />
      </View>
      <TouchableOpacity style={styles.mapButton} onPress={() => Actions.map()}>
        <Text style={styles.mapButtonText}>Map</Text>
      </TouchableOpacity>
    </View>;
  }
}

const styles = StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'stretch',
    backgroundColor: '#fff',
    flex: 1
  },
  numberWrapper: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  },
  peopleOnline: {
    fontSize: 160,
    lineHeight: 160
  },
  mapButton: {
    flex: .1,
    backgroundColor: "#09c",
    alignItems: 'center',
    justifyContent: 'center'
  },
  mapButtonText: {
    color: "#fff",
    fontWeight: "bold",
    fontSize: 16
  }
});
